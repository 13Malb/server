// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id String @id @default(uuid())
  clerkUserId String @unique
  email String @unique
  name String
  imageUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  transactions  Transaction[]
  address Address[]
}

model Transaction {
  id  String @id @default(uuid())
  name  String
  productId String
  amount  String
  category String?
  description String?
  status  String?
  totalPrice String?
  // Relation to usemigrationr
  userId  String
  user User @relation(fields: [userId], references: [clerkUserId], onDelete: Cascade)
  createdAt DateTime @default(now())
  @@index([userId])
}

model Address {
  id String @id @default(uuid())
  city String
  suburb String
  street String
  userId String
  phoneNumber Int
  user User @relation(fields: [userId], references: [clerkUserId], onDelete: Cascade)
  createdAt DateTime @default(now())
  @@index([userId])
}

model Inventory {
  id String @id @default(uuid())
  name String
  imageUrl String
  description String?
  price Float
  category String
  qty String?
  available Boolean?
  rating String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}